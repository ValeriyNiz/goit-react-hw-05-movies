{"version":3,"file":"static/js/459.cb30f111.chunk.js","mappings":"sKAAO,IAAMA,EAAY,4B,uJCAlB,IAAMC,EACH,mCADGA,EAEF,+BCAEC,EAAiB,WAC5B,OAAOC,MAAM,GAAD,OACPF,EADO,wCACuCA,IACjDG,MAAK,SAAAC,GACL,OAAOA,EAAKC,MACb,GACF,EAEYC,EAAkB,SAAAC,GAC7B,OAAOL,MAAM,GAAD,OACPF,EADO,kBACiBO,EADjB,oBACoCP,IAC9CG,MAAK,SAAAC,GACL,OAAOA,EAAKC,MACb,GACF,EAEYG,EAAU,SAAAD,GACrB,OAAOL,MAAM,GAAD,OACPF,EADO,kBACiBO,EADjB,4BAC4CP,IACtDG,MAAK,SAAAC,GACL,OAAOA,EAAKC,MACb,GACF,EAEYI,EAAa,SAAAF,GACxB,OAAOL,MAAM,GAAD,OACPF,EADO,kBACiBO,EADjB,4BAC4CP,IACtDG,MAAK,SAAAC,GACL,OAAOA,EAAKC,MACb,GACF,EAEYK,EAAwB,SAAAC,GACnC,OAAOT,MAAM,GAAD,OACPF,EADO,iCACgCA,EADhC,kBACuDW,IACjER,MAAK,SAAAC,GACL,OAAOA,EAAKC,MACb,GACF,C,oHCvCD,EAA2B,uBAA3B,EAAgE,0BAAhE,EAAyG,2B,SC0CzG,EApCa,WACX,IAAQE,GAAYK,EAAAA,EAAAA,MAAZL,QACR,GAAwBM,EAAAA,EAAAA,UAAS,MAAjC,eAAOC,EAAP,KAAaC,EAAb,KAQA,OANAC,EAAAA,EAAAA,YAAU,YACRR,EAAAA,EAAAA,IAAQD,GAASJ,MAAK,SAAAC,GACpBW,EAAQX,EAAKU,KACd,GACF,GAAE,CAACP,IAEGO,GACL,wBACGA,EAAKG,KAAI,SAAAC,GACR,OACE,gBAAIC,UAAWC,EAAf,WACE,gBAAKD,UAAWC,EAAhB,UACE,gBACEC,IACEH,EAAMI,aAAN,UACOvB,EAAAA,EADP,eACuBmB,EAAMI,cACzB,mDAENC,IAAKL,EAAMM,UAGf,cAAGL,UAAWC,EAAd,SAAmCF,EAAMM,QACzC,uCAAeN,EAAMO,eAZaP,EAAMQ,GAe7C,OAGH,yCAEH,C","sources":["constants.js","httpClient/config.js","httpClient/index.js","webpack://react-homework-template/./src/pages/Cast/Cast.module.css?cfbb","pages/Cast/Cast.jsx"],"sourcesContent":["export const IMAGE_URL = 'https://image.tmdb.org/t/p';\n","export const config = {\n  apiKey: 'db3c8780132bea2931973682c726f027',\n  baseUrl: 'https://api.themoviedb.org/3',\n};\n","import { config } from './config';\n\nexport const getTrendMovies = () => {\n  return fetch(\n    `${config.baseUrl}/trending/movie/week?api_key=${config.apiKey}`\n  ).then(resp => {\n    return resp.json();\n  });\n};\n\nexport const getMovieDetails = movieId => {\n  return fetch(\n    `${config.baseUrl}/movie/${movieId}?api_key=${config.apiKey}`\n  ).then(resp => {\n    return resp.json();\n  });\n};\n\nexport const getCast = movieId => {\n  return fetch(\n    `${config.baseUrl}/movie/${movieId}/credits?api_key=${config.apiKey}`\n  ).then(resp => {\n    return resp.json();\n  });\n};\n\nexport const getReviews = movieId => {\n  return fetch(\n    `${config.baseUrl}/movie/${movieId}/reviews?api_key=${config.apiKey}`\n  ).then(resp => {\n    return resp.json();\n  });\n};\n\nexport const getSearchMovieResults = text => {\n  return fetch(\n    `${config.baseUrl}/search/movie?api_key=${config.apiKey}&query=${text}`\n  ).then(resp => {\n    return resp.json();\n  });\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"castItem\":\"Cast_castItem__XA6Qz\",\"castItemDiv\":\"Cast_castItemDiv__lCHQF\",\"castItemText\":\"Cast_castItemText__Tpssd\"};","import React, { useState, useEffect } from 'react';\n// import PropTypes from 'prop-types';\nimport { getCast } from 'httpClient';\nimport { useParams } from 'react-router-dom';\nimport { IMAGE_URL } from 'constants';\nimport style from './Cast.module.css';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState(null);\n\n  useEffect(() => {\n    getCast(movieId).then(resp => {\n      setCast(resp.cast);\n    });\n  }, [movieId]);\n\n  return cast ? (\n    <ul>\n      {cast.map(actor => {\n        return (\n          <li className={style.castItem} key={actor.id}>\n            <div className={style.castItemDiv}>\n              <img\n                src={\n                  actor.profile_path\n                    ? `${IMAGE_URL}/w92${actor.profile_path}`\n                    : 'https://via.placeholder.com/92x138?text=No+image'\n                }\n                alt={actor.name}\n              />\n            </div>\n            <p className={style.castItemText}>{actor.name}</p>\n            <p>Character: {actor.character}</p>\n          </li>\n        );\n      })}\n    </ul>\n  ) : (\n    <p>No information</p>\n  );\n};\n\nexport default Cast;\n"],"names":["IMAGE_URL","config","getTrendMovies","fetch","then","resp","json","getMovieDetails","movieId","getCast","getReviews","getSearchMovieResults","text","useParams","useState","cast","setCast","useEffect","map","actor","className","style","src","profile_path","alt","name","character","id"],"sourceRoot":""}